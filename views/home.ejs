<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
    <link rel="stylesheet" href="/home.css" />
  </head>
  <body>
    <div class="main-container">
      <div class="header1">
        <p><a href="#">Home</a></p>
        <p class="list">Employee List</p>
        <p><%= empName %></p>
        <p><a class="link" href="/">Logout</a></p>
      </div>
      <div class="result">
        <h1>Welcome to Admin Panel</h1>
        <button class="create">Create Employee</button>
      </div>
    </div>

    <script>
      const create = document.querySelector(".create");
      const result = document.querySelector(".result");
      const employeeList = document.querySelector(".list");


      function created() {
        result.innerHTML = "";
        const display = document.createElement("div");
        display.classList.add("createEmployee");
        display.innerHTML = `
           <h2>Create Employee</h2>
        <form action="/employee" method="post">
          <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" placeholder="Name" required>
          </div>
          <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" placeholder="Email" required>
          </div>
          <div class="form-group">
            <label for="phone">Mobile No:</label>
            <input type="tel" id="phone" name="phone" placeholder="Mobile No" pattern="[0-9]{10}" required>
          </div>
          <div class="form-group">
            <label for="designation">Designation:</label>
            <select name="designation" id="designation">
               <option value="HR">HR</option>
               <option value="Manager">Manager</option>
               <option value="Sales">Sales</option>
            </select>
          </div>
          <div class="form-group">
            <label for="gender">Gender:</label>
            <input type="radio" name="gender" value="male">Male
            <input type="radio" name="gender" value="fmale">Female
          </div>

          <div class="form-group">
            <label for="Course">Course:</label>
            <input type="checkbox" id="MCA" name="course" value="MCA">    
                 <label>MCA</label> 
            <input type="checkbox" id="BCA" name="course" value="BCA">    
                 <label>BCA</label> 
            <input type="checkbox" id="BSC" name="course" value="BSC">    
                 <label>BSC</label> 
          </div>
          
          <button type="submit" class="submit-btn">Submit</button>
        </form>
           `;

           result.appendChild(display);
      };
      create.addEventListener("click",(event) =>{
        event.preventDefault();
        created();
      });

     employeeList.addEventListener("click",(event) =>{
        event.preventDefault();
        displaySearchResults();
      });



const displaySearchResults = async (value = "") => {

  const response = await fetch("http://localhost:5000/employees");
        const users = await response.json();
        let filteredList;
        if(value==""){
          filteredList=[...users];
          console.log("first");
        }else{
     filteredList = users.filter((e) => {
        
         console.log(e.name.indexOf(value));
        if (e.name.indexOf(value) != -1) {
            return true;
        }
        if (e.name.toLowerCase().indexOf(value) != -1) {
            return true;
        }
        
       
    });
  }

    result.innerHTML = "";
        var count = Object.keys(users).length;
        const details = document.createElement("div");
        details.classList.add("details");
        details.innerHTML= `
        <div>Employee List</div>
        <div>Total Count:${count}</div>
        <div class="group">
        <label for="search">Search</label>
            <input type="text" id="search" name="search" placeholder="">
        </div>
        <button onclick="created()"">Create Employee</button>
        `
        result.appendChild(details);
    
    const table = document.createElement('table');
        const thead = document.createElement('thead');
        const tbody = document.createElement('tbody');
        thead.innerHTML=`
        <tr>
          <td>ID</td>
          <td>NAME</td>
          <td>EMAIL</td>
          <td>PHONE NO</td>
          <td>DESIGNATION</td>
          <td>COURSE</td>
          <td>CREATED AT</td>
          <td>ACTION</>
        </tr>
        `;

        filteredList.forEach((e) => {

// Dynamic creation:
const new_row = document.createElement("tr");
const id = document.createElement("td");
const name = document.createElement("td");
const email = document.createElement("td");
const phone = document.createElement("td");
const designation = document.createElement("td");
const course = document.createElement("td");
const createdAt = document.createElement("td");
const action = document.createElement("td");



// Insert data in the dynamically created element
id.innerText = e._id;
name.innerText = e.name;
email.innerText = e.email;
phone.innerText = e.phone;
designation.innerText = e.designation;
course.innerText = e.course;
createdAt.innerText = e.createdAt;
action.innerHTML=`
<button>Edit</button>
<button onclick="deleteRow(${e.email}">Delete</button>
`


// Append the new elements to the row:

new_row.appendChild(id);
new_row.appendChild(name);
new_row.appendChild(email);
new_row.appendChild(phone);
new_row.appendChild(designation);
new_row.appendChild(course);
new_row.appendChild(createdAt);
new_row.appendChild(action);

tbody.appendChild(new_row);
});
table.appendChild(thead);
table.appendChild(tbody);
result.appendChild(table);
   searchBar =document.getElementById("search");
   filterList();
  };
  let searchBar;

  function filterList(){
    searchBar.addEventListener("input", (e) => {
    e.preventDefault(); // prevent the default action.

    const value = searchBar.value;
    console.log(value);

    displaySearchResults(value);
})
  }

  async function deleteRow(deleteData){
    const deletedRow = await fetch(`http://localhost:5000/employees/${deleteData}`);
  }

  

    </script>
  </body>
</html>
